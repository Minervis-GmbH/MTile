<?php
/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */
namespace srag\Plugins\SrTile\Tile;

use srag\Plugins\SrTile\Utils\SrTileTrait;
use srag\DIC\SrTile\DICTrait;

use ilSrTilePlugin;

/**
 * Class TileListGUI
 *
 * Generated by srag\PluginGenerator v0.9.2
 *
 * @author            studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author            studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 *
 */
class TileListGUI {

	use SrTileTrait;
	use DICTrait;
	const PLUGIN_CLASS_NAME = ilSrTilePlugin::class;
	/**
	 * @var int
	 */
	protected $container_obj_ref_id;


	/**
	 * TileListGUI constructor
	 *
	 * @param int $container_obj_ref_id
	 */
	public function __construct(int $container_obj_ref_id) {


		$this->container_obj_ref_id = $container_obj_ref_id;

		self::dic()->mainTemplate()->addCss(self::plugin()->directory() . "/css/srtile.css");
	}


	public function render() {
		$tile_list_html = "";

		$tile_list = new TileList($this->container_obj_ref_id);

		$tpl = self::plugin()->template("Tile/tpl.tiles.html");
		$tpl->setCurrentBlock('row');

		$tile_html = '';
		foreach ($tile_list->getTiles() as $tile) {

			$tile_gui = new TileGUI($tile->getTileId());

			$tile_html .= $tile_gui->render();
		}

		$tpl->setVariable("TILES", $tile_html);
		$tpl->parseCurrentBlock();

		$tile_list_html = $tpl->get();


		return $tile_list_html;
	}
}